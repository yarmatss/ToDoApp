@model PagedList<TodoDto>

@{
    ViewData["Title"] = "Tasks";
}

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Task List</h2>
        <a asp-action="Create" class="btn btn-primary">Add New Task</a>
    </div>

    <form method="get" class="card mb-4">
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-3">
                    <label for="SearchPhrase" class="form-label">Search</label>
                    <input type="text" id="SearchPhrase" name="SearchPhrase" class="form-control"
                           placeholder="Search..." value="@Context.Request.Query["SearchPhrase"]" />
                </div>
                <div class="col-md-3">
                    <label for="CategoryId" class="form-label">Category</label>
                    <select id="CategoryId" name="CategoryId" class="form-select">
                        <option value="">All Categories</option>
                        @foreach (var category in ViewBag.Categories)
                        {
                            <option value="@category.Id"
                                    selected="@(category.Id.ToString() == Context.Request.Query["CategoryId"])">
                                @category.Name
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="IsCompleted" class="form-label">Status</label>
                    <select id="IsCompleted" name="IsCompleted" class="form-select">
                        <option value="">All Statuses</option>
                        <option value="true" selected="@(Context.Request.Query["IsCompleted"] == "true")">Completed</option>
                        <option value="false" selected="@(Context.Request.Query["IsCompleted"] == "false")">In Progress</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="Priority" class="form-label">Priority</label>
                    <select id="Priority" name="Priority" class="form-select">
                        <option value="">All Priorities</option>
                        @foreach (var priority in Enum.GetValues(typeof(Priority)))
                        {
                            <option value="@priority" selected="@(priority.ToString() == Context.Request.Query["Priority"])">
                                @priority
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="DeadlineFrom" class="form-label">From Date</label>
                    <input type="date" id="DeadlineFrom" name="DeadlineFrom" class="form-control"
                           value="@Context.Request.Query["DeadlineFrom"]" />
                </div>
                <div class="col-md-3">
                    <label for="DeadlineTo" class="form-label">To Date</label>
                    <input type="date" id="DeadlineTo" name="DeadlineTo" class="form-control"
                           value="@Context.Request.Query["DeadlineTo"]" />
                </div>
                <div class="col-md-3">
                    <label for="SortBy" class="form-label">Sort By</label>
                    <select id="SortBy" name="SortBy" class="form-select">
                        <option value="CreatedAt" selected="@(Context.Request.Query["SortBy"] == "CreatedAt")">Creation Date</option>
                        <option value="Deadline" selected="@(Context.Request.Query["SortBy"] == "Deadline")">Deadline</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="SortDescending" class="form-label">Sort Direction</label>
                    <select id="SortDescending" name="SortDescending" class="form-select">
                        <option value="true" selected="@(Context.Request.Query["SortDescending"] == "true")">Descending</option>
                        <option value="false" selected="@(Context.Request.Query["SortDescending"] == "false")">Ascending</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="PageSize" class="form-label">Page Size</label>
                    <select id="PageSize" name="PageSize" class="form-select">
                        @foreach (var size in new[] { 5, 10, 20, 50 })
                        {
                            <option value="@size" selected="@(size.ToString() == Context.Request.Query["PageSize"])">
                                @size items
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-3 align-self-end">
                    <button type="submit" class="btn btn-primary w-100">Filter</button>
                </div>
            </div>
        </div>
    </form>

    <div class="row">
        @if (Model?.Items == null || !Model.Items.Any())
        {
            <div class="col-12">
                <div class="alert alert-warning">
                    No tasks to display.
                </div>
            </div>
        }
        else
        {
            @foreach (var todo in Model.Items)
            {
                <div class="col-md-4 mb-4">
                    <div class="card h-100">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@todo.Title</h5>
                            <p class="card-text">@todo.Description</p>
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                @if (todo.Deadline.HasValue)
                                {
                                    <small class="text-muted">Deadline: @todo.Deadline</small>
                                }
                                <span class="badge @(todo.IsCompleted ? "bg-success" : "bg-warning") ms-auto">
                                    @(todo.IsCompleted ? "Completed" : "In Progress")
                                </span>
                            </div>
                            <div class="mt-auto d-flex gap-2">
                                <a asp-action="Details" asp-route-id="@todo.Id" class="btn btn-sm btn-outline-info">Details</a>
                                <form asp-action="Toggle" method="post" style="display: inline;">
                                    <input type="hidden" name="id" value="@todo.Id" />
                                    <button type="submit" class="btn btn-sm btn-outline-primary">
                                        @(todo.IsCompleted ? "Restore" : "Complete")
                                    </button>
                                </form>
                                <a asp-action="Edit" asp-route-id="@todo.Id" class="btn btn-sm btn-outline-secondary">Edit</a>
                                <form asp-action="Delete" method="post" style="display: inline;">
                                    <input type="hidden" name="id" value="@todo.Id" />
                                    <button type="submit" class="btn btn-sm btn-outline-danger"
                                            onclick="return confirm('Are you sure you want to delete this task?')">
                                        Delete
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>

    @if (Model.TotalPages > 1)
    {
        <nav>
            <ul class="pagination justify-content-center">
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new {
                            pageNumber = i,
                            searchPhrase = Context.Request.Query["SearchPhrase"],
                            categoryId = Context.Request.Query["CategoryId"],
                            isCompleted = Context.Request.Query["IsCompleted"],
                            deadlineFrom = Context.Request.Query["DeadlineFrom"],
                            deadlineTo = Context.Request.Query["DeadlineTo"],
                            priority = Context.Request.Query["Priority"],
                            sortBy = Context.Request.Query["SortBy"],
                            sortDescending = Context.Request.Query["SortDescending"],
                            pageSize = Context.Request.Query["PageSize"]
                        })">@i</a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>
