@page "/category"
@inject IApiClient ApiClient
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
@attribute [Authorize]

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Categories</h2>
        <NavLink href="/category/create" class="btn btn-primary">Add Category</NavLink>
    </div>

    @if (categories == null || !categories.Any())
    {
        <div class="alert alert-info">
            No categories to display.
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var category in categories)
            {
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">@category.Name</h5>
                            <p class="card-text">@category.Description</p>
                            <div class="d-flex gap-2">
                                <NavLink href="@($"/category/edit/{category.Id}")"
                                         class="btn btn-sm btn-outline-secondary">
                                    Edit
                                </NavLink>
                                <button @onclick="() => DeleteCategory(category.Id)"
                                        class="btn btn-sm btn-outline-danger">
                                    Delete
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private IEnumerable<CategoryDto> categories;

    protected override async Task OnInitializedAsync()
    {
        await LoadCategories();
    }

    private async Task LoadCategories()
    {
        categories = await ApiClient.GetCategoriesAsync();
    }

    private async Task DeleteCategory(Guid id)
    {
        if (await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this category?"))
        {
            await ApiClient.DeleteCategoryAsync(id);
            await LoadCategories();
        }
    }
}